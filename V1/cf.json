{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "Simple devpi cluster setup, since I am a cheapo only using micro isntances. Also since we are using micro instances we have to use EBS storage, found out the hard way.",

    "Parameters": {
        "KeyName" : {
            "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type" : "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern" : "[-_ a-zA-Z0-9]*",
            "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
        },

        "InstanceType" : {
            "Description" : "Devpi EC2 instance type",
            "Type" : "String",
            "Default" : "t1.micro",
            "AllowedValues" : ["t1.micro"],
            "ConstraintDescription" : "Since I'm a cheapo, only free tier hardware!"
        },
        "PuppetURL" : {
            "Description" : "Puppet S3 URL",
            "Type" : "String",
            "AllowedPattern" : ".*",
            "Default" : "https://s3-us-west-2.amazonaws.com/devpi-config/devpi.pp",
            "ConstraintDescription" : "URL to puppet manifest"
        }
    },

    "Mappings" : {
        "AWSInstanceType2Arch" : {
            "t1.micro"    : { "Arch" : "64" }
        },
        "AWSRegion2AMI" : {
            "us-east-1"      : { "64" : "ami-05355a6c" },
            "us-west-1"      : { "64" : "ami-3ffed17a" },
            "us-west-2"      : { "64" : "ami-0358ce33" },
            "eu-west-1"      : { "64" : "ami-c7c0d6b3" },
            "sa-east-1"      : { "64" : "ami-5253894f" },
            "ap-southeast-1" : { "64" : "ami-fade91a8" },
            "ap-southeast-2" : { "64" : "ami-d16bfbeb" },
            "ap-northeast-1" : { "64" : "ami-39b23d38" }
        }
    },

    "Resources" : {


        "InitConfig" : {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Properties" : {
                "ImageId"        : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" },
                                        { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" },
                                        "Arch" ] } ] },
                "KeyName"        : { "Ref" : "KeyName" },
                "SecurityGroups" : [ { "Ref" : "DevpiSecurityGroup" } ],
                "InstanceType"   : { "Ref" : "InstanceType" },
                "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -v\n",
                    "yum update -y aws-cfn-bootstrap\n",

                    "# Install packages\n",
                    "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r InitConfig",
                    "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

                    "# Fetch puppet manifest\n",
                    "curl ", { "Ref" : "PuppetURL" }, " -o /tmp/devpi.pp\n",
                    "chmod 777 /tmp/devpi.pp\n",

                    "#install puppet required module (since no puppet master)\n",
                    "mkdir /etc/puppet/modules\n",
                    "puppet module install torrancew/cron --version 0.0.3\n",

                    "# kick puppet\n",
                    "puppet apply -l /var/log/puppetapply.log /tmp/devpi.pp"
                    ]]}}
            },
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" :
                            {
                                "puppet" : []
                            }
                        }
                    }
                }
            }
        },

        "DevpiGroup" : {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "AvailabilityZones"       : { "Fn::GetAZs" : ""},
                "DesiredCapacity"         : "1",
                "LaunchConfigurationName" : { "Ref" : "InitConfig" },
                "LoadBalancerNames"       : [ { "Ref" : "DevpiLB" } ],
                "MinSize"                 : "1",
                "MaxSize"                 : "10",
                "Tags"                    : [{ "Key" : "Type", "Value" : "devpidist", "PropagateAtLaunch" : true }]
            }
        },

        "DevpiLB" : {
            "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties" : {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "Listeners" : [ {
                    "LoadBalancerPort" : "80",
                    "InstancePort" : "80",
                    "Protocol" : "HTTP"
                } ],
                "HealthCheck" : {
                    "Target" : { "Fn::Join" : [ "", ["HTTP:", "80", "/"]]},
                    "HealthyThreshold" : "2",
                    "UnhealthyThreshold" : "5",
                    "Interval" : "30",
                    "Timeout" : "5"
                }
            }
        },

        "DevpiScaleUpPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" : { "Ref" : "DevpiGroup" },
                "Cooldown" : "300",
                "ScalingAdjustment" : "1"
            }
        },
        "DevpiScaleDownPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" : { "Ref" : "DevpiGroup" },
                "Cooldown" : "300",
                "ScalingAdjustment" : "-1"
            }
        },

        "HighLatency":{
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if HTTP latency >= 10s in 1minute period",
                "MetricName": "Latency",
                "Namespace": "AWS/ELB",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "1",
                "Threshold": "10",
                "AlarmActions": [ { "Ref": "DevpiScaleUpPolicy" } ],
                "Dimensions": [
                {
                    "Name": "LoadBalancerName",
                    "Value": { "Ref": "DevpiLB" }
                }
                ],
                    "ComparisonOperator": "GreaterThanOrEqualToThreshold"
            }
        },

        "LowLatency": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if HTTP latency < 3s in 10 minute period",
                "MetricName": "Latency",
                "Namespace": "AWS/ELB",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "10",
                "Threshold": "3",
                "AlarmActions": [ { "Ref": "DevpiScaleDownPolicy" } ],
                "Dimensions": [
                {
                    "Name": "LoadBalancerName",
                    "Value": { "Ref": "DevpiLB" }
                }
                ],
                    "ComparisonOperator": "LessThanThreshold"
            }
        },

        "HighHTTP5XX":{
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if HTTP Repsonse 5XX > 5 in 1m period",
                "MetricName": "HTTPCode_Backend_5XX",
                "Namespace": "AWS/ELB",
                "Statistic": "Sum",
                "Period": "60",
                "EvaluationPeriods": "1",
                "Threshold": "5",
                "AlarmActions": [ { "Ref": "DevpiScaleUpPolicy" } ],
                "Dimensions": [
                {
                    "Name": "LoadBalancerName",
                    "Value": { "Ref": "DevpiLB" }
                }
                ],
                    "ComparisonOperator": "GreaterThanThreshold"
            }
        },

        "LowHTTP5xx": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if HTTP Response 5XX=0 for 5 minutes",
                "MetricName": "HTTPCode_Backend_5XX",
                "Namespace": "AWS/ELB",
                "Statistic": "Sum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "Threshold": "0",
                "AlarmActions": [ { "Ref": "DevpiScaleDownPolicy" } ],
                "Dimensions": [
                {
                    "Name": "LoadBalancerName",
                    "Value": { "Ref": "DevpiLB" }
                }
                ],
                    "ComparisonOperator": "LessThanOrEqualToThreshold"
            }
        },

        "DevpiSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" :{
                "GroupDescription" : "Enable HTTP 80 for devpi serving",
                "SecurityGroupIngress":[
                    {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
                    {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
                ]
            }
        },

        "devpiUser" : {
            "Type" : "AWS::IAM::User",
            "Properties":{
                "Path"     : "/",
                "Policies" : [
                {
                    "PolicyName": "root",
                    "PolicyDocument": {
                        "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "cloudformation:DescribeStackResource",
                            "Resource": "*"
                        }
                        ]
                    }
                }
                ]
            }
        },

        "devpiKeys": {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "Serial"   : 1,
                "Status"   : "Active",
                "UserName" : { "Ref" : "devpiUser" }
            }
        }
    }
}
